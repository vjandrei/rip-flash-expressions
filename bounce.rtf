{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf460
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs22 \cf0 Vy0 = 800; //initial y velocity (pixels/second) \
Vx0 = 450; // initial x velocity (pixels/second) \
g = 2500; // gravity (pixels/second/second) \
floor = 400; \
e = .85; //elasticity \
\
b = floor - position[1]; \
h = b + Vy0*Vy0/(2*g); \
T = Vy0/g + Math.sqrt(2*h/g); \
\
if (time < T)\{ \
y = Vy0*time - g*time*time/2 + b; \
\}else\{ \
Vy = -(Vy0 - g*T); \
while (true)\{ \
Vy *= e; \
t = T; \
T += 2*Vy/g; \
if (time < T)\{ \
t = time - t; \
y = Vy*t - g*t*t/2; \
break; \
\}else if (T - t < thisComp.frameDuration)\{ \
y = 0; \
break; \
\} \
\} \
\} \
[position[0] + Vx0*(-Math.pow(2,-time) +1), floor - y]}